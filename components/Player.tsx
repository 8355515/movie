'use client'; import React, { useEffect, useRef } from 'react'; import Hls from 'hls.js'; export default function Player({ id, src }: { id: string, src: string }) { const videoRef = useRef<HTMLVideoElement|null>(null); useEffect(()=>{ if(videoRef.current && Hls.isSupported()){ const hls=new Hls(); hls.loadSource(src); hls.attachMedia(videoRef.current); return ()=>hls.destroy(); } else if(videoRef.current){ videoRef.current.src=src; } },[src]); useEffect(()=>{ const video=videoRef.current; if(!video) return; function h(){ const progress=(video.currentTime/video.duration)*100; if(!isNaN(progress) && progress>0){ fetch('/api/progress',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({ id, value: Math.round(progress) })}); } } video.addEventListener('timeupdate',h); return ()=>video.removeEventListener('timeupdate',h); },[id]); return <video ref={videoRef} controls className="w-full h-auto bg-black rounded-lg" /> }